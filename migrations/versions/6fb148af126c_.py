"""empty message

Revision ID: 6fb148af126c
Revises: 
Create Date: 2024-03-17 00:11:35.357589

"""
from alembic import op
import sqlalchemy as sa
import os

# Get the environment and schema name for conditional schema prefixing
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")



# revision identifiers, used by Alembic.
revision = '6fb148af126c'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jobId', sa.String(length=100), nullable=True),
    sa.Column('vjk', sa.String(length=100), nullable=True),
    sa.Column('advn', sa.String(length=100), nullable=True),
    sa.Column('site', sa.String(length=30), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('pay', sa.String(length=100), nullable=True),
    sa.Column('companyName', sa.String(length=100), nullable=True),
    sa.Column('link', sa.String(length=400), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    # Add schema prefixing for production environment
    if environment == "production":
        for table_name in ["users", "jobs"]:
            op.execute(f"ALTER TABLE {table_name} SET SCHEMA {SCHEMA};")

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs')
    op.drop_table('users')
    # ### end Alembic commands ###

    # Remove schema prefixing for production environment
    if environment == "production":
        for table_name in ["jobs","users"]:
            op.execute(f"ALTER TABLE {table_name} SET SCHEMA public;")
